kind: Deployment
apiVersion: apps/v1
metadata:
  name: test-spark-job
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      component: test-spark-job
  template:
    metadata:
      namespace: test
      labels:
        component: test-spark-job
    spec:
      containers:
        - name: test-spark-job
          image: kafka_spark
          imagePullPolicy: Never
          args: ["spark_job"]
          ports:
            - containerPort: 8100
          resources:
            requests:
              cpu: 100m
          # volumeMounts:
          #   - mountPath: /data
          #     name: spark-data
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "host.docker.internal:9092"
            - name: SPARK_MASTER
              value: "spark://spark-master-k8s:7077"
            - name: SPARK_DRIVER_PORT
              value: "8100"
            - name: SPARK_DRIVER_HOST
              value: "test-spark-job"

      # volumes:
      #   - name: spark-data
      #     persistentVolumeClaim:
      #       claimName: spark-persistent-volume-claim

---
kind: Service
apiVersion: v1
metadata:
  name: test-spark-job
  namespace: test
spec:
  ports:
    - name: spark
      port: 8100
      targetPort: 8100
  selector:
    component: test-spark-job
---
kind: Service
apiVersion: v1
metadata:
  name: test-spark-job
  namespace: spark
spec:
  type: ExternalName
  externalName: test-spark-job.test.svc.cluster.local 
  ports:
    - name: spark
      port: 8100
      targetPort: 8100